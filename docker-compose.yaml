version: '3'

services:

  mongo:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - net-case-itau

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - net-case-itau
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - net-case-itau
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - net-case-itau
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  customer-api:
    build: './app-customer'
    container_name: customer-api
    ports:
      - 8081:8081
    environment:
      MONGODB_HOST: mongo
    networks:
      - net-case-itau
    depends_on:
      - mongo

  catalog-api:
    build: './app-catalog'
    container_name: catalog-api
    ports:
      - 8083:8083
    environment:
      MONGODB_HOST: mongo
    networks:
      - net-case-itau
    depends_on:
      - mongo

  debt-api:
    build: './app-debt'
    container_name: debt-api
    ports:
      - 8084:8084
    environment:
      MONGODB_HOST: mongo
      KAFKA_HOST: kafka
    networks:
      - net-case-itau
    depends_on:
      - mongo

networks:
  net-case-itau:
    driver: bridge
