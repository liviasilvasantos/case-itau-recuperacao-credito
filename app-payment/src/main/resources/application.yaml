
server:
  port: 8085

springdoc:
  swagger-ui:
    operationsSorter: method

#Mongo and Kafka
spring:
  data:
    mongodb:
      username: payment
      password: payment
      host: ${MONGODB_HOST:localhost}
      port: 27017
      database: dbPayment
      uri: mongodb://${spring.data.mongodb.username}:${spring.data.mongodb.password}@${spring.data.mongodb.host}:${spring.data.mongodb.port}/${spring.data.mongodb.database}
  kafka:
    listener:
      concurrency: 2
    consumer:
      bootstrap-servers:
        - ${KAFKA_HOST:localhost}:9092
      group-id: payment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    producer:
      bootstrap-servers:
        - ${KAFKA_HOST:localhost}:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topics:
      payment-renegotiation-request: payment.renegotiation.create.request
      notification-request: notifications.customer.request


feign:
  catalog:
    name: catalogClient
    url: http://${CATALOG_API_HOST:localhost}:8083

#Resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 50
        failureRateThreshold: 40
        minimumNumberOfCalls: 5
        ignoreExceptions:
          - feign.FeignException.FeignClientException
    instances:
      catalogClient:
        baseConfig: default
